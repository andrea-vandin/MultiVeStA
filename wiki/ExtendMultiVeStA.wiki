#how to add the support for your simulator.

= Extend MultiVeStA with a new simulator =

In the following is described the steps that must be followed to integrate your simulator in MultiVeStA, if it does not belongs to the list of currently supported simulators.


== Extend _NewState_ class of _MultiVeStA _ ==
In the following are described the methods that must be implemented to extend the _NewState_ class.

   * All parameters that the user pass to MultiVeStA client that are not direclty used by the MultiVeStA engine are stored in _*params*_ and can be retrieved through _*params.getOtherParameters()*_. These optional parameters corresponds to the ones provided with the _*ssp*_ options.

   * _*setSimulatorForNewSimulation( int seed )*_ is called by MultiVeStA to order the simulator to reinitialize the simulator with the provided seed. The seeds generated by MultiVeStA are obtained according the _Mersenne Twister _ algorithm.

   * _*performOneStepOfSimulation()*_ is called by MultiVeStA, when the _*osws*_ option is setted to _ONESTEP_, to order the simulator to advance of one step the simulation.

   * _*performWholeSimulation()*_ (_this is an optional parameter_) is called by MultiVeStA, when the _*osws*_ option is setted to _WHOLESIMULATION_, to order the simulator to advance until the simulation met an internal halt condition (i.e., the simulation is completed).

   * _*rval( int which )*_ allows the evaluation of state observations *common to every model* built with the current analyzed simulator. 